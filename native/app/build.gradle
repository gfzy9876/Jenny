import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardCopyOption

plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'pers.zy.jenny'
    compileSdk 34

    defaultConfig {
        applicationId "pers.zy.jenny"
        minSdk 23
        targetSdk 34
        versionCode 103
        versionName "1.0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.13"
    }
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    if (outputFileName != null && outputFileName.endsWith('.apk')) {
                        variant.assembleProvider.configure {
                            it.doLast {
                                File sourceApk = output.getOutputFile()
                                File outPath = new File(project.rootDir.parent, "")
                                if (!outPath.exists()) {
                                    outPath.mkdirs()
                                }
                                File resultApk = new File(outPath, "Jenny.apk")
                                Files.copy(Paths.get(sourceApk.getPath()), Paths.get(resultApk.getPath()), StandardCopyOption.REPLACE_EXISTING)
                            }
                        }
                    }
            }
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    implementation libs.kotlinx.coroutines.android

    implementation(platform(libs.okhttp.bom))
    implementation(libs.okhttp)
    implementation(libs.okhttp.interceptor)
    implementation libs.retrofit
    implementation libs.converter.gson

    implementation platform(libs.google.firebase.bom)
    implementation libs.firebase.crashlytics.ktx
    implementation libs.firebase.analytics.ktx

    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

}